// <auto-generated />
using FirstWebAPICore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstWebAPICore.Migrations
{
    [DbContext(typeof(DBJobbsmaroc))]
    [Migration("20220122211924_AddingOffre_emploiAndRecruteur")]
    partial class AddingOffre_emploiAndRecruteur
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FirstWebAPICore.Models.Candidat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Candidats");
                });

            modelBuilder.Entity("FirstWebAPICore.Models.Offre_emploi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("categorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("experience_requise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("niveau_etude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("offre_adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recruteurid")
                        .HasColumnType("int");

                    b.Property<string>("salaire_max")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salaire_min")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_contrat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_emploi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("recruteurid");

                    b.ToTable("Offre_emploi");
                });

            modelBuilder.Entity("FirstWebAPICore.Models.Recruteur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("details_societe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("motdepasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siteweb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("societe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ville")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Recruteurs");
                });

            modelBuilder.Entity("FirstWebAPICore.Models.Offre_emploi", b =>
                {
                    b.HasOne("FirstWebAPICore.Models.Recruteur", "recruteur")
                        .WithMany()
                        .HasForeignKey("recruteurid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recruteur");
                });
#pragma warning restore 612, 618
        }
    }
}
